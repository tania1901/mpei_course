//https://leetcode.com/problems/longest-univalue-path/


/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    int longestUnivaluePath(TreeNode* root) {
        if (!root) return 0;
        int maxVal = 0;//длина-число-ребрышек
        find(root, root->val, maxVal);
        return maxVal - 1;
    }
    
    int find(TreeNode* root, int val, int& maxVal) {//поиск максимального
        if (root==NULL) return 0;
        if (root->val != val) {
            find(root, root->val, maxVal);
            return 0;
        } else {//узел тоже есть
            int left = find(root->left, val, maxVal);
            int right = find(root->right, val, maxVal);
            maxVal = max(maxVal, 1 + left + right);//единица есть ребрышко
            return 1 + max(left, right);
        }
    }
};
