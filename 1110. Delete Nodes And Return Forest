//https://leetcode.com/problems/delete-nodes-and-return-forest/

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    
    vector<TreeNode*> result;
    set<int> dp;
    
    void delli(TreeNode* &root){
        if(root!=NULL)
        {
            delli(root->left);
            delli(root->right);
            if(dp.find(root->val)!=dp.end())
            {
                if(root->left)  result.push_back(root->left);
                if(root->right) result.push_back(root->right);
                root=NULL;
				delete root;
            }
        }
        return;
    }
    
    vector<TreeNode*> delNodes(TreeNode* root, vector<int>& to_delete) {
	
        for(int i=0;i<to_delete.size();i++)//пока есть что-то на удаление
            dp.insert(to_delete[i]);//добавляем в множество
        delli(root);//удалить корень
        if(root)
            result.push_back(root);
        return result;
    } 
    
};

